{"version":3,"file":"component---src-templates-post-template-tsx-55102cde90a79e5baebc.js","mappings":"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","sources":["webpack://gunwooa.github.io/./src/components/Divider.tsx","webpack://gunwooa.github.io/./src/components/Tags.tsx","webpack://gunwooa.github.io/./src/styles/markdown.ts","webpack://gunwooa.github.io/./src/components/CommentWidget.tsx","webpack://gunwooa.github.io/./src/templates/PostTemplate.tsx"],"sourcesContent":["import React from 'react'\nimport { css } from '@emotion/react'\nimport { colors } from 'styles'\n\ntype DividerProps = {\n  height?: number\n  marginTop?: number\n  marginBottom?: number\n}\n\nconst Divider: React.VFC<DividerProps> = ({ height = 0.1, marginTop = 2, marginBottom = 2 }) => {\n  return (\n    <div\n      css={css`\n        width: 100%;\n        height: ${height}rem;\n        margin-top: ${marginTop}rem;\n        margin-bottom: ${marginBottom}rem;\n        background-color: ${colors.gray400};\n      `}\n    />\n  )\n}\n\nexport default Divider\n","import React from 'react'\nimport { css } from '@emotion/react'\n\nimport { colors } from 'styles'\n\ntype TagsProps = {\n  tags: string[]\n  size?: 'small' | 'medium' | 'large'\n}\n\nconst SIZE = {\n  margin: {\n    small: '0 0.4rem 0.4rem 0',\n    medium: '0 0.6rem 0.6rem 0',\n    large: '0 0.8rem 0.8rem 0',\n  },\n  padding: {\n    small: '0.4rem 0.8rem',\n    medium: '0.6rem 1.2rem',\n    large: '0.8rem 1.6rem',\n  },\n  borderRadius: {\n    small: '1.2',\n    medium: '1.4',\n    large: '1.6',\n  },\n  fontSize: {\n    small: '1.2',\n    medium: '1.4',\n    large: '1.6',\n  },\n}\n\nconst Tags: React.VFC<TagsProps> = ({ tags, size = 'small' }) => {\n  if (tags.length === 0) return null\n\n  return (\n    <div\n      css={css`\n        display: flex;\n        flex-wrap: wrap;\n      `}\n    >\n      {tags.map(tag => (\n        <span\n          key={tag}\n          className=\"tag\"\n          css={css`\n            margin: ${SIZE.margin[size]};\n            padding: ${SIZE.padding[size]};\n            border-radius: ${SIZE.borderRadius[size]}rem;\n            font-size: ${SIZE.fontSize[size]}rem;\n            font-weight: 600;\n            color: ${colors.white};\n          `}\n        >\n          {tag}\n        </span>\n      ))}\n    </div>\n  )\n}\n\nexport default Tags\n","import { css } from '@emotion/react'\nimport { colors, mobileMediaQuery } from 'styles'\n\nexport const markdownStyle = css`\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n  width: 100%;\n  word-wrap: break-word;\n\n  // Markdown Style\n  line-height: 1.8;\n  font-weight: 400;\n  color: ${colors.black};\n\n  h1,\n  h2,\n  h3 {\n    font-weight: 700;\n    line-height: 1.2;\n  }\n\n  h1 {\n    margin-top: 5rem;\n    margin-bottom: 2.5rem;\n\n    ${mobileMediaQuery} {\n      margin-top: 3rem;\n      margin-bottom: 1.5rem;\n    }\n  }\n\n  h2 {\n    margin-top: 4.4rem;\n    margin-bottom: 2.2rem;\n\n    ${mobileMediaQuery} {\n      margin-top: 2.6rem;\n      margin-bottom: 1.3rem;\n    }\n  }\n\n  h3 {\n    margin-top: 3.6rem;\n    margin-bottom: 1.8rem;\n\n    ${mobileMediaQuery} {\n      margin-top: 2.2rem;\n      margin-bottom: 1.1rem;\n    }\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3 {\n    margin-top: 0;\n  }\n\n  h1 {\n    font-size: 3rem;\n\n    ${mobileMediaQuery} {\n      font-size: 2rem;\n    }\n  }\n\n  h2 {\n    font-size: 2.4rem;\n\n    ${mobileMediaQuery} {\n      font-size: 1.6rem;\n    }\n  }\n\n  h3 {\n    font-size: 1.8rem;\n\n    ${mobileMediaQuery} {\n      font-size: 1.4rem;\n    }\n  }\n\n  p,\n  ul,\n  ol,\n  li,\n  em,\n  strong,\n  u,\n  del,\n  a {\n    font-size: 1.6rem;\n\n    ${mobileMediaQuery} {\n      font-size: 1.4rem;\n    }\n  }\n\n  blockquote {\n    margin: 2.7rem 0;\n    padding: 0.5rem 1.5rem;\n    border-left: 0.4rem solid ${colors.blue100};\n    background-color: ${colors.gray50};\n\n    strong {\n      font-weight: 700;\n    }\n\n    ${mobileMediaQuery} {\n      margin: 2rem 0;\n      padding: 0.3rem 1.2rem;\n    }\n  }\n\n  ol,\n  ul {\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0 0 0 3rem;\n\n    ${mobileMediaQuery} {\n      padding: 0 0 0 2.4rem;\n    }\n  }\n\n  ul {\n    list-style-type: disc;\n  }\n\n  ul ul {\n    list-style-type: circle;\n  }\n\n  ul ul ul {\n    list-style-type: square;\n  }\n\n  ol {\n    list-style-type: decimal;\n  }\n\n  hr {\n    border: 0.1rem solid ${colors.gray400};\n    margin: 3rem 0;\n\n    ${mobileMediaQuery} {\n      border: 0.05rem solid ${colors.gray400};\n      margin: 2.4rem 0;\n    }\n  }\n\n  a {\n    font-weight: 700;\n    color: ${colors.blue100};\n  }\n\n  strong {\n    font-weight: 700;\n  }\n\n  img {\n    width: 100%;\n    margin: 1rem 0;\n    border-radius: 1rem;\n  }\n\n  table {\n    margin: 1rem 0;\n  }\n\n  thead {\n    border-bottom: 0.4rem solid ${colors.gray700};\n\n    ${mobileMediaQuery} {\n      border-bottom: 0.2rem solid ${colors.gray700};\n    }\n  }\n\n  tr {\n    /*  */\n  }\n\n  th,\n  td {\n    padding: 1.2rem;\n    border: 0.2rem solid ${colors.gray700};\n    font-size: 1.6rem;\n\n    ${mobileMediaQuery} {\n      padding: 0.8rem;\n      border: 0.1rem solid ${colors.gray700};\n      font-size: 1.4rem;\n    }\n  }\n\n  .deckgo-highlight-code-carbon {\n    margin: 1.6rem 0;\n    border-radius: 0.8rem;\n    font-size: 1.6rem;\n\n    ${mobileMediaQuery} {\n      font-size: 1.4rem;\n    }\n  }\n\n  code {\n    padding: 0.2rem 0.6rem;\n    border-radius: 0.4rem;\n    font-size: 80%;\n    font-weight: 600;\n    color: ${colors.red100};\n    background: ${colors.gray200};\n  }\n`\n","import React, { createRef, useEffect } from 'react'\n\nconst src = 'https://utteranc.es/client.js'\nconst repo = 'gunwooa/gunwooa.github.io'\n\ntype UtterancesAttributesType = {\n  src: string\n  repo: string\n  'issue-term': string\n  label: string\n  theme: string\n  crossorigin: string\n  async: string\n}\n\nconst CommentWidget: React.VFC = () => {\n  const element = createRef<HTMLDivElement>()\n\n  useEffect(() => {\n    if (element.current === null) return\n\n    const utterances: HTMLScriptElement = document.createElement('script')\n\n    const attributes: UtterancesAttributesType = {\n      src,\n      repo,\n      'issue-term': 'pathname',\n      label: 'Comment',\n      theme: `github-light`,\n      crossorigin: 'anonymous',\n      async: 'true',\n    }\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value)\n    })\n\n    element.current.appendChild(utterances)\n  }, [])\n\n  return <div ref={element} />\n}\n\nexport default CommentWidget\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nimport SEO from 'app/SEO'\nimport Tags from 'components/Tags'\nimport Divider from 'components/Divider'\nimport CommentWidget from 'components/CommentWidget'\nimport { markdownStyle } from 'styles/markdown'\nimport { Edges } from 'types'\nimport { colors, mobileMediaQuery, layoutWidth } from 'styles'\nimport { useWindowSize } from 'hooks/useWindowSize'\n\ntype PostTemplateProps = {\n  data: {\n    allMarkdownRemark: {\n      edges: Edges\n    }\n  }\n}\n\nconst PostTemplate: React.VFC<PostTemplateProps> = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const { width: windowWidth } = useWindowSize()\n  const {\n    node: { html, timeToRead, frontmatter },\n  } = edges[0]\n  const tags = frontmatter.tag.map(tag => `#${tag}`).join(' ')\n\n  return (\n    <>\n      <SEO\n        title={`${frontmatter.category} | ${frontmatter.title}`}\n        description={`${frontmatter.summary} ${tags}`}\n        thumbnail={frontmatter.thumbnail.publicURL}\n      />\n      <PostTemplateBox>\n        <div>\n          <GatsbyImage\n            css={css`\n              max-height: 40rem;\n              border-radius: 1.2rem;\n\n              ${mobileMediaQuery} {\n                max-height: 20rem;\n              }\n            `}\n            image={frontmatter.thumbnail.childImageSharp.gatsbyImageData}\n            alt=\"photo\"\n            objectFit=\"cover\"\n          />\n\n          <h1\n            css={css`\n              margin-top: 4rem;\n              font-size: 4.6rem;\n              line-height: 1.3;\n              color: ${colors.gray800};\n\n              ${mobileMediaQuery} {\n                margin-top: 3rem;\n                font-size: 3rem;\n              }\n            `}\n          >\n            [{frontmatter.category}] {frontmatter.title}\n          </h1>\n\n          <p\n            css={css`\n              display: flex;\n              margin: 2rem 0;\n              font-size: 1.6rem;\n              color: ${colors.gray700};\n\n              ${mobileMediaQuery} {\n                margin: 1.6rem 0;\n                font-size: 1.4rem;\n              }\n            `}\n          >\n            {frontmatter.date} · {timeToRead} min read\n          </p>\n          <Tags tags={frontmatter.tag} size={windowWidth < layoutWidth ? 'small' : 'medium'} />\n        </div>\n\n        <Divider marginTop={windowWidth < layoutWidth ? 3 : 4} />\n\n        <div\n          css={css`\n            ${markdownStyle};\n            margin-bottom: 8rem;\n\n            ${mobileMediaQuery} {\n              margin-bottom: 5rem;\n            }\n          `}\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n\n        <CommentWidget />\n      </PostTemplateBox>\n    </>\n  )\n}\n\nexport default PostTemplate\n\nconst PostTemplateBox = styled.div``\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          timeToRead\n          frontmatter {\n            date(formatString: \"YYYY.MM.DD\")\n            category\n            title\n            summary\n            tag\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768)\n              }\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["height","marginTop","marginBottom","css","colors","SIZE","margin","small","medium","large","padding","borderRadius","fontSize","tags","size","length","map","tag","key","className","markdownStyle","mobileMediaQuery","element","createRef","useEffect","current","utterances","document","createElement","attributes","src","repo","label","theme","crossorigin","async","Object","entries","forEach","value","setAttribute","appendChild","ref","edges","data","allMarkdownRemark","windowWidth","useWindowSize","width","node","html","timeToRead","frontmatter","join","SEO","title","category","description","summary","thumbnail","publicURL","PostTemplateBox","G","image","childImageSharp","gatsbyImageData","alt","objectFit","date","Tags","layoutWidth","Divider","dangerouslySetInnerHTML","__html"],"sourceRoot":""}