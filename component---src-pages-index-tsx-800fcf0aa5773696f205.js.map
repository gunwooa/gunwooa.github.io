{"version":3,"file":"component---src-pages-index-tsx-800fcf0aa5773696f205.js","mappings":"0JAUA,IAAMA,EAAO,CACXC,OAAQ,CACNC,MAAO,oBACPC,OAAQ,oBACRC,MAAO,qBAETC,QAAS,CACPH,MAAO,gBACPC,OAAQ,gBACRC,MAAO,iBAETE,aAAc,CACZJ,MAAO,MACPC,OAAQ,MACRC,MAAO,OAETG,SAAU,CACRL,MAAO,MACPC,OAAQ,MACRC,MAAO,Q,uDAkCX,IA9BmC,SAAC,GAA6B,IAA3BI,EAA2B,EAA3BA,KAA2B,IAArBC,KAAAA,OAAqB,MAAd,QAAc,EAC/D,OAAoB,IAAhBD,EAAKE,OAAqB,MAG5B,eACEC,IAAG,GAKFH,EAAKI,KAAI,SAAAC,GAAG,OACX,gBACEC,IAAKD,EACLE,UAAU,MACVJ,KAAKA,EAAAA,EAAAA,IAAF,UACSX,EAAKC,OAAOQ,GADrB,YAEUT,EAAKK,QAAQI,GAFvB,kBAGgBT,EAAKM,aAAaG,GAHlC,iBAIYT,EAAKO,SAASE,GAJ1B,6BAMQO,EAAAA,GAAAA,MANR,SASFH,S,kICnCX,IAAMI,EAAkBC,EAAAA,GAAc,EAAI,E,0GAoFpCC,GAAW,cAAH,oBAAG,CAAH,IAERC,GAAW,aAAH,oBAAG,CAAH,6DAKVC,EAAAA,GALU,6CAWRC,GAAe,aAAH,oBAAG,CAAH,4CAGPL,EAHO,8FAQdM,EAAAA,GARc,0GAiBdF,EAAAA,GAjBc,iBAsBZG,GAAqB,cAAH,oBAAG,CAAH,+GAyCxB,UA9J6C,SAAC,GAIxC,IAFiBC,EAEjB,EAHJC,KACEC,SAAYC,MAGd,OACE,yBACE,QAAC,IAAD,OACA,QAACT,EAAD,MACE,QAAC,IAAD,OACA,QAAC,IAAD,CAASU,aAAc,KACvB,QAACT,EAAD,KACGK,EAAMb,KAAI,YAAc,IAAXkB,EAAW,EAAXA,KAEVC,EAIED,EAJFC,GACUC,EAGRF,EAHFG,OAAUD,KACVE,EAEEJ,EAFFI,WACAC,EACEL,EADFK,YAGF,OACE,QAACb,EAAD,CAAcP,UAAU,YAAYD,IAAKiB,IACvC,QAAC,EAAAK,KAAD,CAAMC,GAAIL,IACR,QAAC,EAAAM,EAAD,CACE3B,IAAG,EAKH4B,MAAOJ,EAAYK,UAAUC,gBAAgBC,gBAC7CC,IAAI,QACJC,UAAU,WAGZ,QAACpB,EAAD,MACE,eACEb,KAAKA,EAAAA,EAAAA,IAAF,8CAIUK,EAAAA,GAAAA,MAJV,6DAUUA,EAAAA,GAAAA,MAVV,WAcH,sBACImB,EAAYU,SADhB,KAC4BV,EAAYW,QAExC,iBAAIX,EAAYY,UAChB,QAAC,IAAD,CAAMvC,KAAM2B,EAAYtB,QAE1B,eACEF,KAAKA,EAAAA,EAAAA,IAAF,2FAOUK,EAAAA,GAAAA,MAPV,WAWH,oBAAOmB,EAAYa,OACnB,oBAAOd,EAAP","sources":["webpack://gunwooa.github.io/./src/components/Tags.tsx","webpack://gunwooa.github.io/./src/pages/index.tsx"],"sourcesContent":["import React from 'react'\nimport { css } from '@emotion/react'\n\nimport { colors } from 'styles'\n\ntype TagsProps = {\n  tags: string[]\n  size?: 'small' | 'medium' | 'large'\n}\n\nconst SIZE = {\n  margin: {\n    small: '0 0.4rem 0.4rem 0',\n    medium: '0 0.6rem 0.6rem 0',\n    large: '0 0.8rem 0.8rem 0',\n  },\n  padding: {\n    small: '0.4rem 0.8rem',\n    medium: '0.6rem 1.2rem',\n    large: '0.8rem 1.6rem',\n  },\n  borderRadius: {\n    small: '1.2',\n    medium: '1.4',\n    large: '1.6',\n  },\n  fontSize: {\n    small: '1.2',\n    medium: '1.4',\n    large: '1.6',\n  },\n}\n\nconst Tags: React.VFC<TagsProps> = ({ tags, size = 'small' }) => {\n  if (tags.length === 0) return null\n\n  return (\n    <div\n      css={css`\n        display: flex;\n        flex-wrap: wrap;\n      `}\n    >\n      {tags.map(tag => (\n        <span\n          key={tag}\n          className=\"tag\"\n          css={css`\n            margin: ${SIZE.margin[size]};\n            padding: ${SIZE.padding[size]};\n            border-radius: ${SIZE.borderRadius[size]}rem;\n            font-size: ${SIZE.fontSize[size]}rem;\n            font-weight: 600;\n            color: ${colors.white};\n          `}\n        >\n          {tag}\n        </span>\n      ))}\n    </div>\n  )\n}\n\nexport default Tags\n","import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { css } from '@emotion/react'\nimport styled from '@emotion/styled'\n\nimport SEO from 'components/SEO'\nimport ProfileBox from 'components/ProfileBox'\nimport Divider from 'components/Divider'\nimport Tags from 'components/Tags'\nimport { Edges } from 'types'\nimport { layoutWidth, mobileMediaQuery, pcMediaQuery, colors } from 'styles'\n\ntype IndexPageProps = {\n  data: {\n    postData: {\n      edges: Edges\n    }\n  }\n}\n\nconst THUMBNAIL_WIDTH = layoutWidth / 2 - 1\n\nconst IndexPage: React.VFC<IndexPageProps> = ({\n  data: {\n    postData: { edges: posts },\n  },\n}) => {\n  return (\n    <>\n      <SEO />\n      <IndexBox>\n        <ProfileBox />\n        <Divider marginBottom={4} />\n        <PostList>\n          {posts.map(({ node }) => {\n            const {\n              id,\n              fields: { slug },\n              timeToRead,\n              frontmatter,\n            } = node\n\n            return (\n              <PostLinkItem className=\"post-card\" key={id}>\n                <Link to={slug}>\n                  <GatsbyImage\n                    css={css`\n                      max-height: 18rem;\n                      border-top-left-radius: 0.8rem;\n                      border-top-right-radius: 0.8rem;\n                    `}\n                    image={frontmatter.thumbnail.childImageSharp.gatsbyImageData}\n                    alt=\"photo\"\n                    objectFit=\"cover\"\n                  />\n\n                  <PostDescriptionBox>\n                    <div\n                      css={css`\n                        > h1 {\n                          font-size: 1.8rem;\n                          line-height: 1.5;\n                          color: ${colors.black};\n                        }\n                        > p {\n                          margin: 2rem 0;\n                          font-size: 1.5rem;\n                          line-height: 1.5;\n                          color: ${colors.black};\n                        }\n                      `}\n                    >\n                      <h1>\n                        [{frontmatter.category}] {frontmatter.title}\n                      </h1>\n                      <p>{frontmatter.summary}</p>\n                      <Tags tags={frontmatter.tag} />\n                    </div>\n                    <div\n                      css={css`\n                        display: flex;\n                        justify-content: space-between;\n                        margin-top: 2rem;\n\n                        > span {\n                          font-size: 1.3rem;\n                          color: ${colors.black};\n                        }\n                      `}\n                    >\n                      <span>{frontmatter.date}</span>\n                      <span>{timeToRead} min read</span>\n                    </div>\n                  </PostDescriptionBox>\n                </Link>\n              </PostLinkItem>\n            )\n          })}\n        </PostList>\n      </IndexBox>\n    </>\n  )\n}\n\nconst IndexBox = styled.div``\n\nconst PostList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n\n  ${mobileMediaQuery} {\n    flex-direction: column;\n    flex-wrap: nowrap;\n  }\n`\n\nconst PostLinkItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: ${THUMBNAIL_WIDTH}rem;\n  margin-bottom: 2rem;\n  border-radius: 0.8rem;\n  box-shadow: 0px 6px 20px 0px rgba(0, 0, 0, 0.1);\n\n  ${pcMediaQuery} {\n    transition: transform 0.2s ease-in-out;\n\n    :hover {\n      transform: scale(1.05) translateY(-1rem);\n      cursor: pointer;\n    }\n  }\n\n  ${mobileMediaQuery} {\n    width: 100%;\n  }\n`\n\nconst PostDescriptionBox = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 2rem;\n`\n\n// skip: 1 -> static/resume.md\nexport const indexQuery = graphql`\n  {\n    postData: allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n      limit: 1000\n      skip: 1\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            category\n            title\n            summary\n            tag\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"names":["SIZE","margin","small","medium","large","padding","borderRadius","fontSize","tags","size","length","css","map","tag","key","className","colors","THUMBNAIL_WIDTH","layoutWidth","IndexBox","PostList","mobileMediaQuery","PostLinkItem","pcMediaQuery","PostDescriptionBox","posts","data","postData","edges","marginBottom","node","id","slug","fields","timeToRead","frontmatter","Link","to","G","image","thumbnail","childImageSharp","gatsbyImageData","alt","objectFit","category","title","summary","date"],"sourceRoot":""}