{"version":3,"file":"component---src-templates-post-template-tsx-84f037f1463cb7225a10.js","mappings":"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","sources":["webpack://gunwooa.github.io/./src/components/Divider.tsx","webpack://gunwooa.github.io/./src/components/Tags.tsx","webpack://gunwooa.github.io/./src/styles/markdown.ts","webpack://gunwooa.github.io/./src/components/CommentWidget.tsx","webpack://gunwooa.github.io/./src/templates/PostTemplate.tsx"],"sourcesContent":["import React from 'react'\r\n\r\nimport { css } from '@emotion/react'\r\n\r\nimport { colors } from 'styles'\r\n\r\ntype DividerProps = {\r\n  height?: number\r\n  marginTop?: number\r\n  marginBottom?: number\r\n}\r\n\r\nconst Divider: React.VFC<DividerProps> = ({ height = 0.1, marginTop = 2, marginBottom = 2 }) => {\r\n  return (\r\n    <div\r\n      css={css`\r\n        width: 100%;\r\n        height: ${height}rem;\r\n        margin-top: ${marginTop}rem;\r\n        margin-bottom: ${marginBottom}rem;\r\n        background-color: ${colors.gray400};\r\n      `}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Divider\r\n","import React from 'react'\r\n\r\nimport { css } from '@emotion/react'\r\n\r\nimport { colors } from 'styles'\r\n\r\ntype TagsProps = {\r\n  tags: string[]\r\n  size?: 'small' | 'medium' | 'large'\r\n}\r\n\r\nconst SIZE = {\r\n  margin: {\r\n    small: '0 0.4rem 0.4rem 0',\r\n    medium: '0 0.6rem 0.6rem 0',\r\n    large: '0 0.8rem 0.8rem 0',\r\n  },\r\n  padding: {\r\n    small: '0.4rem 0.8rem',\r\n    medium: '0.6rem 1.2rem',\r\n    large: '0.8rem 1.6rem',\r\n  },\r\n  borderRadius: {\r\n    small: '1.2',\r\n    medium: '1.4',\r\n    large: '1.6',\r\n  },\r\n  fontSize: {\r\n    small: '1.2',\r\n    medium: '1.4',\r\n    large: '1.6',\r\n  },\r\n}\r\n\r\nconst Tags: React.VFC<TagsProps> = ({ tags, size = 'small' }) => {\r\n  if (tags.length === 0) return null\r\n\r\n  return (\r\n    <div\r\n      css={css`\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n      `}\r\n    >\r\n      {tags.map(tag => (\r\n        <span\r\n          key={tag}\r\n          className=\"tag\"\r\n          css={css`\r\n            margin: ${SIZE.margin[size]};\r\n            padding: ${SIZE.padding[size]};\r\n            border-radius: ${SIZE.borderRadius[size]}rem;\r\n            font-size: ${SIZE.fontSize[size]}rem;\r\n            font-weight: 600;\r\n            color: ${colors.white};\r\n          `}\r\n        >\r\n          {tag}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import { css } from '@emotion/react'\r\n\r\nimport { colors, mobileMediaQuery } from 'styles'\r\n\r\nexport const markdownStyle = css`\r\n  -ms-text-size-adjust: 100%;\r\n  -webkit-text-size-adjust: 100%;\r\n  width: 100%;\r\n  word-wrap: break-word;\r\n\r\n  // Markdown Style\r\n  line-height: 1.8;\r\n  font-weight: 400;\r\n  color: ${colors.black};\r\n\r\n  h1,\r\n  h2,\r\n  h3 {\r\n    font-weight: 700;\r\n    line-height: 1.2;\r\n  }\r\n\r\n  h1 {\r\n    margin-top: 5rem;\r\n    margin-bottom: 2.5rem;\r\n\r\n    ${mobileMediaQuery} {\r\n      margin-top: 3rem;\r\n      margin-bottom: 1.5rem;\r\n    }\r\n  }\r\n\r\n  h2 {\r\n    margin-top: 4.4rem;\r\n    margin-bottom: 2.2rem;\r\n\r\n    ${mobileMediaQuery} {\r\n      margin-top: 2.6rem;\r\n      margin-bottom: 1.3rem;\r\n    }\r\n  }\r\n\r\n  h3 {\r\n    margin-top: 3.6rem;\r\n    margin-bottom: 1.8rem;\r\n\r\n    ${mobileMediaQuery} {\r\n      margin-top: 2.2rem;\r\n      margin-bottom: 1.1rem;\r\n    }\r\n  }\r\n\r\n  hr + h1,\r\n  hr + h2,\r\n  hr + h3 {\r\n    margin-top: 0;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 3rem;\r\n\r\n    ${mobileMediaQuery} {\r\n      font-size: 2rem;\r\n    }\r\n  }\r\n\r\n  h2 {\r\n    font-size: 2.4rem;\r\n\r\n    ${mobileMediaQuery} {\r\n      font-size: 1.6rem;\r\n    }\r\n  }\r\n\r\n  h3 {\r\n    font-size: 1.8rem;\r\n\r\n    ${mobileMediaQuery} {\r\n      font-size: 1.4rem;\r\n    }\r\n  }\r\n\r\n  p,\r\n  ul,\r\n  ol,\r\n  li,\r\n  em,\r\n  strong,\r\n  u,\r\n  del,\r\n  a {\r\n    font-size: 1.6rem;\r\n\r\n    ${mobileMediaQuery} {\r\n      font-size: 1.4rem;\r\n    }\r\n  }\r\n\r\n  blockquote {\r\n    margin: 2.7rem 0;\r\n    padding: 0.5rem 1.5rem;\r\n    border-left: 0.4rem solid ${colors.blue100};\r\n    background-color: ${colors.gray50};\r\n\r\n    strong {\r\n      font-weight: 700;\r\n    }\r\n\r\n    ${mobileMediaQuery} {\r\n      margin: 2rem 0;\r\n      padding: 0.3rem 1.2rem;\r\n    }\r\n  }\r\n\r\n  ol,\r\n  ul {\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    padding: 0 0 0 3rem;\r\n\r\n    ${mobileMediaQuery} {\r\n      padding: 0 0 0 2.4rem;\r\n    }\r\n  }\r\n\r\n  ul {\r\n    list-style-type: disc;\r\n  }\r\n\r\n  ul ul {\r\n    list-style-type: circle;\r\n  }\r\n\r\n  ul ul ul {\r\n    list-style-type: square;\r\n  }\r\n\r\n  ol {\r\n    list-style-type: decimal;\r\n  }\r\n\r\n  hr {\r\n    border: 0.1rem solid ${colors.gray400};\r\n    margin: 3rem 0;\r\n\r\n    ${mobileMediaQuery} {\r\n      border: 0.05rem solid ${colors.gray400};\r\n      margin: 2.4rem 0;\r\n    }\r\n  }\r\n\r\n  a {\r\n    font-weight: 700;\r\n    color: ${colors.blue100};\r\n  }\r\n\r\n  strong {\r\n    font-weight: 700;\r\n  }\r\n\r\n  img {\r\n    width: 100%;\r\n    margin: 1rem 0;\r\n    border-radius: 1rem;\r\n  }\r\n\r\n  table {\r\n    margin: 1rem 0;\r\n  }\r\n\r\n  thead {\r\n    border-bottom: 0.4rem solid ${colors.gray700};\r\n\r\n    ${mobileMediaQuery} {\r\n      border-bottom: 0.2rem solid ${colors.gray700};\r\n    }\r\n  }\r\n\r\n  tr {\r\n    /*  */\r\n  }\r\n\r\n  th,\r\n  td {\r\n    padding: 1.2rem;\r\n    border: 0.2rem solid ${colors.gray700};\r\n    font-size: 1.6rem;\r\n\r\n    ${mobileMediaQuery} {\r\n      padding: 0.8rem;\r\n      border: 0.1rem solid ${colors.gray700};\r\n      font-size: 1.4rem;\r\n    }\r\n  }\r\n\r\n  .deckgo-highlight-code-carbon {\r\n    margin: 1.6rem 0;\r\n    border-radius: 0.8rem;\r\n    font-size: 1.6rem;\r\n\r\n    ${mobileMediaQuery} {\r\n      font-size: 1.4rem;\r\n    }\r\n  }\r\n\r\n  code {\r\n    padding: 0.2rem 0.6rem;\r\n    border-radius: 0.4rem;\r\n    font-size: 80%;\r\n    font-weight: 600;\r\n    color: ${colors.red100};\r\n    background: ${colors.gray200};\r\n  }\r\n`\r\n","import React, { createRef, useEffect } from 'react'\r\n\r\nconst src = 'https://utteranc.es/client.js'\r\nconst repo = 'gunwooa/gunwooa.github.io'\r\n\r\ntype UtterancesAttributesType = {\r\n  src: string\r\n  repo: string\r\n  'issue-term': string\r\n  label: string\r\n  theme: string\r\n  crossorigin: string\r\n  async: string\r\n}\r\n\r\nconst CommentWidget: React.VFC = () => {\r\n  const element = createRef<HTMLDivElement>()\r\n\r\n  useEffect(() => {\r\n    if (element.current === null) return\r\n\r\n    const utterances: HTMLScriptElement = document.createElement('script')\r\n\r\n    const attributes: UtterancesAttributesType = {\r\n      src,\r\n      repo,\r\n      'issue-term': 'pathname',\r\n      label: 'Comment',\r\n      theme: `github-light`,\r\n      crossorigin: 'anonymous',\r\n      async: 'true',\r\n    }\r\n\r\n    Object.entries(attributes).forEach(([key, value]) => {\r\n      utterances.setAttribute(key, value)\r\n    })\r\n\r\n    element.current.appendChild(utterances)\r\n  }, [])\r\n\r\n  return <div ref={element} />\r\n}\r\n\r\nexport default CommentWidget\r\n","import React from 'react'\r\n\r\nimport { graphql } from 'gatsby'\r\nimport { GatsbyImage } from 'gatsby-plugin-image'\r\n\r\nimport { css } from '@emotion/react'\r\nimport styled from '@emotion/styled'\r\n\r\nimport SEO from 'app/SEO'\r\n\r\nimport CommentWidget from 'components/CommentWidget'\r\nimport Divider from 'components/Divider'\r\nimport Tags from 'components/Tags'\r\n\r\nimport { useWindowSize } from 'hooks/useWindowSize'\r\n\r\nimport { Edges } from 'types'\r\n\r\nimport { colors, layoutWidth, mobileMediaQuery } from 'styles'\r\nimport { markdownStyle } from 'styles/markdown'\r\n\r\ntype PostTemplateProps = {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: Edges\r\n    }\r\n  }\r\n}\r\n\r\nconst PostTemplate: React.VFC<PostTemplateProps> = ({\r\n  data: {\r\n    allMarkdownRemark: { edges },\r\n  },\r\n}) => {\r\n  const { width: windowWidth } = useWindowSize()\r\n  const {\r\n    node: { html, timeToRead, frontmatter },\r\n  } = edges[0]\r\n  const tags = frontmatter.tag.map(tag => `#${tag}`).join(' ')\r\n\r\n  return (\r\n    <>\r\n      <SEO\r\n        title={`${frontmatter.category} | ${frontmatter.title}`}\r\n        description={`${frontmatter.summary} ${tags}`}\r\n        thumbnail={frontmatter.thumbnail.publicURL}\r\n      />\r\n      <PostTemplateBox>\r\n        <div>\r\n          <GatsbyImage\r\n            css={css`\r\n              max-height: 40rem;\r\n              border-radius: 1.2rem;\r\n\r\n              ${mobileMediaQuery} {\r\n                max-height: 20rem;\r\n              }\r\n            `}\r\n            image={frontmatter.thumbnail.childImageSharp.gatsbyImageData}\r\n            alt=\"photo\"\r\n            objectFit=\"cover\"\r\n          />\r\n\r\n          <h1\r\n            css={css`\r\n              margin-top: 4rem;\r\n              font-size: 4.6rem;\r\n              line-height: 1.3;\r\n              color: ${colors.gray800};\r\n\r\n              ${mobileMediaQuery} {\r\n                margin-top: 3rem;\r\n                font-size: 3rem;\r\n              }\r\n            `}\r\n          >\r\n            [{frontmatter.category}] {frontmatter.title}\r\n          </h1>\r\n\r\n          <p\r\n            css={css`\r\n              display: flex;\r\n              margin: 2rem 0;\r\n              font-size: 1.6rem;\r\n              color: ${colors.gray700};\r\n\r\n              ${mobileMediaQuery} {\r\n                margin: 1.6rem 0;\r\n                font-size: 1.4rem;\r\n              }\r\n            `}\r\n          >\r\n            {frontmatter.date} · {timeToRead} min read\r\n          </p>\r\n          <Tags tags={frontmatter.tag} size={windowWidth < layoutWidth ? 'small' : 'medium'} />\r\n        </div>\r\n\r\n        <Divider marginTop={windowWidth < layoutWidth ? 3 : 4} />\r\n\r\n        <div\r\n          css={css`\r\n            ${markdownStyle};\r\n            margin-bottom: 8rem;\r\n\r\n            ${mobileMediaQuery} {\r\n              margin-bottom: 5rem;\r\n            }\r\n          `}\r\n          dangerouslySetInnerHTML={{ __html: html }}\r\n        />\r\n\r\n        <CommentWidget />\r\n      </PostTemplateBox>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostTemplate\r\n\r\nconst PostTemplateBox = styled.div``\r\n\r\nexport const queryMarkdownDataBySlug = graphql`\r\n  query queryMarkdownDataBySlug($slug: String) {\r\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\r\n      edges {\r\n        node {\r\n          html\r\n          timeToRead\r\n          frontmatter {\r\n            date(formatString: \"YYYY.MM.DD\")\r\n            category\r\n            title\r\n            summary\r\n            tag\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 768)\r\n              }\r\n              publicURL\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["height","marginTop","marginBottom","css","colors","SIZE","margin","small","medium","large","padding","borderRadius","fontSize","tags","size","length","map","tag","key","className","markdownStyle","mobileMediaQuery","element","createRef","useEffect","current","utterances","document","createElement","attributes","src","repo","label","theme","crossorigin","async","Object","entries","forEach","value","setAttribute","appendChild","ref","edges","data","allMarkdownRemark","windowWidth","useWindowSize","width","node","html","timeToRead","frontmatter","join","SEO","title","category","description","summary","thumbnail","publicURL","PostTemplateBox","G","image","childImageSharp","gatsbyImageData","alt","objectFit","date","Tags","layoutWidth","Divider","dangerouslySetInnerHTML","__html"],"sourceRoot":""}