{"version":3,"file":"component---src-pages-index-tsx-8665396b20fe43edcdc8.js","mappings":"0JAWA,IAAMA,EAAO,CACXC,OAAQ,CACNC,MAAO,oBACPC,OAAQ,oBACRC,MAAO,qBAETC,QAAS,CACPH,MAAO,gBACPC,OAAQ,gBACRC,MAAO,iBAETE,aAAc,CACZJ,MAAO,MACPC,OAAQ,MACRC,MAAO,OAETG,SAAU,CACRL,MAAO,MACPC,OAAQ,MACRC,MAAO,Q,uDAkCX,IA9BmC,SAAC,GAA6B,IAA3BI,EAA2B,EAA3BA,KAA2B,IAArBC,KAAAA,OAAqB,MAAd,QAAc,EAC/D,OAAoB,IAAhBD,EAAKE,OAAqB,MAG5B,eACEC,IAAG,GAKFH,EAAKI,KAAI,SAAAC,GAAG,OACX,gBACEC,IAAKD,EACLE,UAAU,MACVJ,KAAKA,EAAAA,EAAAA,IAAF,UACSX,EAAKC,OAAOQ,GADrB,YAEUT,EAAKK,QAAQI,GAFvB,kBAGgBT,EAAKM,aAAaG,GAHlC,iBAIYT,EAAKO,SAASE,GAJ1B,6BAMQO,EAAAA,GAAAA,MANR,SASFH,S,kIC/BX,IAAMI,EAAkBC,EAAAA,GAAc,EAAI,E,0GAoFpCC,GAAW,cAAH,oBAAG,CAAH,IAERC,GAAW,aAAH,oBAAG,CAAH,6DAKVC,EAAAA,GALU,6CAWRC,GAAe,aAAH,oBAAG,CAAH,4CAGPL,EAHO,8FAQdM,EAAAA,GARc,0GAiBdF,EAAAA,GAjBc,iBAsBZG,GAAqB,cAAH,oBAAG,CAAH,+GAyCxB,UA9J6C,SAAC,GAIxC,IAFiBC,EAEjB,EAHJC,KACEC,SAAYC,MAGd,OACE,yBACE,QAAC,IAAD,OACA,QAACT,EAAD,MACE,QAAC,IAAD,OACA,QAAC,IAAD,CAASU,aAAc,KACvB,QAACT,EAAD,KACGK,EAAMb,KAAI,YAAc,IAAXkB,EAAW,EAAXA,KAEVC,EAIED,EAJFC,GACUC,EAGRF,EAHFG,OAAUD,KACVE,EAEEJ,EAFFI,WACAC,EACEL,EADFK,YAGF,OACE,QAACb,EAAD,CAAcP,UAAU,YAAYD,IAAKiB,IACvC,QAAC,EAAAK,KAAD,CAAMC,GAAIL,IACR,QAAC,EAAAM,EAAD,CACE3B,IAAG,EAKH4B,MAAOJ,EAAYK,UAAUC,gBAAgBC,gBAC7CC,IAAI,QACJC,UAAU,WAGZ,QAACpB,EAAD,MACE,eACEb,KAAKA,EAAAA,EAAAA,IAAF,8CAIUK,EAAAA,GAAAA,MAJV,6DAUUA,EAAAA,GAAAA,MAVV,WAcH,sBACImB,EAAYU,SADhB,KAC4BV,EAAYW,QAExC,iBAAIX,EAAYY,UAChB,QAAC,IAAD,CAAMvC,KAAM2B,EAAYtB,QAE1B,eACEF,KAAKA,EAAAA,EAAAA,IAAF,2FAOUK,EAAAA,GAAAA,MAPV,WAWH,oBAAOmB,EAAYa,OACnB,oBAAOd,EAAP","sources":["webpack://gunwooa.github.io/./src/components/Tags.tsx","webpack://gunwooa.github.io/./src/pages/index.tsx"],"sourcesContent":["import React from 'react'\r\n\r\nimport { css } from '@emotion/react'\r\n\r\nimport { colors } from 'styles'\r\n\r\ntype TagsProps = {\r\n  tags: string[]\r\n  size?: 'small' | 'medium' | 'large'\r\n}\r\n\r\nconst SIZE = {\r\n  margin: {\r\n    small: '0 0.4rem 0.4rem 0',\r\n    medium: '0 0.6rem 0.6rem 0',\r\n    large: '0 0.8rem 0.8rem 0',\r\n  },\r\n  padding: {\r\n    small: '0.4rem 0.8rem',\r\n    medium: '0.6rem 1.2rem',\r\n    large: '0.8rem 1.6rem',\r\n  },\r\n  borderRadius: {\r\n    small: '1.2',\r\n    medium: '1.4',\r\n    large: '1.6',\r\n  },\r\n  fontSize: {\r\n    small: '1.2',\r\n    medium: '1.4',\r\n    large: '1.6',\r\n  },\r\n}\r\n\r\nconst Tags: React.VFC<TagsProps> = ({ tags, size = 'small' }) => {\r\n  if (tags.length === 0) return null\r\n\r\n  return (\r\n    <div\r\n      css={css`\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n      `}\r\n    >\r\n      {tags.map(tag => (\r\n        <span\r\n          key={tag}\r\n          className=\"tag\"\r\n          css={css`\r\n            margin: ${SIZE.margin[size]};\r\n            padding: ${SIZE.padding[size]};\r\n            border-radius: ${SIZE.borderRadius[size]}rem;\r\n            font-size: ${SIZE.fontSize[size]}rem;\r\n            font-weight: 600;\r\n            color: ${colors.white};\r\n          `}\r\n        >\r\n          {tag}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React from 'react'\r\n\r\nimport { Link, graphql } from 'gatsby'\r\nimport { GatsbyImage } from 'gatsby-plugin-image'\r\n\r\nimport { css } from '@emotion/react'\r\nimport styled from '@emotion/styled'\r\n\r\nimport SEO from 'app/SEO'\r\n\r\nimport Divider from 'components/Divider'\r\nimport ProfileBox from 'components/ProfileBox'\r\nimport Tags from 'components/Tags'\r\n\r\nimport { Edges } from 'types'\r\n\r\nimport { colors, layoutWidth, mobileMediaQuery, pcMediaQuery } from 'styles'\r\n\r\ntype IndexPageProps = {\r\n  data: {\r\n    postData: {\r\n      edges: Edges\r\n    }\r\n  }\r\n}\r\n\r\nconst THUMBNAIL_WIDTH = layoutWidth / 2 - 1\r\n\r\nconst IndexPage: React.VFC<IndexPageProps> = ({\r\n  data: {\r\n    postData: { edges: posts },\r\n  },\r\n}) => {\r\n  return (\r\n    <>\r\n      <SEO />\r\n      <IndexBox>\r\n        <ProfileBox />\r\n        <Divider marginBottom={4} />\r\n        <PostList>\r\n          {posts.map(({ node }) => {\r\n            const {\r\n              id,\r\n              fields: { slug },\r\n              timeToRead,\r\n              frontmatter,\r\n            } = node\r\n\r\n            return (\r\n              <PostLinkItem className=\"post-card\" key={id}>\r\n                <Link to={slug}>\r\n                  <GatsbyImage\r\n                    css={css`\r\n                      max-height: 18rem;\r\n                      border-top-left-radius: 0.8rem;\r\n                      border-top-right-radius: 0.8rem;\r\n                    `}\r\n                    image={frontmatter.thumbnail.childImageSharp.gatsbyImageData}\r\n                    alt=\"photo\"\r\n                    objectFit=\"cover\"\r\n                  />\r\n\r\n                  <PostDescriptionBox>\r\n                    <div\r\n                      css={css`\r\n                        > h1 {\r\n                          font-size: 1.8rem;\r\n                          line-height: 1.5;\r\n                          color: ${colors.black};\r\n                        }\r\n                        > p {\r\n                          margin: 2rem 0;\r\n                          font-size: 1.5rem;\r\n                          line-height: 1.5;\r\n                          color: ${colors.black};\r\n                        }\r\n                      `}\r\n                    >\r\n                      <h1>\r\n                        [{frontmatter.category}] {frontmatter.title}\r\n                      </h1>\r\n                      <p>{frontmatter.summary}</p>\r\n                      <Tags tags={frontmatter.tag} />\r\n                    </div>\r\n                    <div\r\n                      css={css`\r\n                        display: flex;\r\n                        justify-content: space-between;\r\n                        margin-top: 2rem;\r\n\r\n                        > span {\r\n                          font-size: 1.3rem;\r\n                          color: ${colors.black};\r\n                        }\r\n                      `}\r\n                    >\r\n                      <span>{frontmatter.date}</span>\r\n                      <span>{timeToRead} min read</span>\r\n                    </div>\r\n                  </PostDescriptionBox>\r\n                </Link>\r\n              </PostLinkItem>\r\n            )\r\n          })}\r\n        </PostList>\r\n      </IndexBox>\r\n    </>\r\n  )\r\n}\r\n\r\nconst IndexBox = styled.div``\r\n\r\nconst PostList = styled.ul`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n\r\n  ${mobileMediaQuery} {\r\n    flex-direction: column;\r\n    flex-wrap: nowrap;\r\n  }\r\n`\r\n\r\nconst PostLinkItem = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: ${THUMBNAIL_WIDTH}rem;\r\n  margin-bottom: 2rem;\r\n  border-radius: 0.8rem;\r\n  box-shadow: 0px 6px 20px 0px rgba(0, 0, 0, 0.1);\r\n\r\n  ${pcMediaQuery} {\r\n    transition: transform 0.2s ease-in-out;\r\n\r\n    :hover {\r\n      transform: scale(1.05) translateY(-1rem);\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  ${mobileMediaQuery} {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst PostDescriptionBox = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 2rem;\r\n`\r\n\r\n// skip: 1 -> static/resume.md\r\nexport const indexQuery = graphql`\r\n  {\r\n    postData: allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\r\n      limit: 1000\r\n      skip: 1\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          timeToRead\r\n          frontmatter {\r\n            date(formatString: \"YYYY-MM-DD\")\r\n            category\r\n            title\r\n            summary\r\n            tag\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 768)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default IndexPage\r\n"],"names":["SIZE","margin","small","medium","large","padding","borderRadius","fontSize","tags","size","length","css","map","tag","key","className","colors","THUMBNAIL_WIDTH","layoutWidth","IndexBox","PostList","mobileMediaQuery","PostLinkItem","pcMediaQuery","PostDescriptionBox","posts","data","postData","edges","marginBottom","node","id","slug","fields","timeToRead","frontmatter","Link","to","G","image","thumbnail","childImageSharp","gatsbyImageData","alt","objectFit","category","title","summary","date"],"sourceRoot":""}